#-*- coding: utf-8 -*-
# CA and req configuration
# Note:
#  * Environment variable CA_DIR must be exported
#  * Environment variable CDP_URI must be exported
#  * Environment variable UPN must be exported but can be empty when not used.
#  * For req -x509, i.e. to make the CA cert itself, use
#     -extensions ca_extensions
#  * For normal certificate requests, use -reqexts server_extensions or
#     -reqexts client_extensions
#  * Always set commonName by means of -subj parameter

utf8 = yes

[ ca ]
default_ca = ca_settings

[ ca_settings ]
database = CA/ca/index.txt
serial = CA/ca/serial
default_crl_days = 18250
default_days = 18250
default_md = sha256
policy = ca_policy
copy_extensions = copy
unique_subject = no
x509_extensions = x509_ext

[ ca_policy ]
commonName             = supplied
countryName            = optional
stateOrProvinceName    = optional
organizationName       = optional
organizationalUnitName = optional
emailAddress           = optional
x500UniqueIdentifier   = optional
serialNumber           = optional

[ x509_ext ]
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

[ req ]
default_bits = 2048
default_md = sha256
prompt = no
string_mask = utf8only
distinguished_name = req_distinguished_name

[ req_distinguished_name ]
CN=@CN@
O=@O@
emailAddress=@emailAddress@
serialNumber=@serialNumber@
x500UniqueIdentifier=@x500UniqueIdentifier@

# Specify openssl req -x509 -extensions ca_extensions
# When making CA cert
# CA - obviously
# pathlen:0 - Cannot sign CA certs below itself
# keyCertSign, cRLSign - Only sign certs and CRLs
[ ca_extensions ]
basicConstraints = critical,CA:true,pathlen:0
keyUsage = @CA_KEY_USAGE@

# Specify openssl req -reqexts server_extensions
# When making server
[ server_extensions ]
basicConstraints = CA:false
keyUsage = critical,digitalSignature,keyEncipherment,dataEncipherment
crlDistributionPoints = @CDP@
extendedKeyUsage = @CLIENT_EXT_KEY_USAGE@

# Specify openssl req -reqexts client_extensions
# When making client certs
[ client_extensions ]
basicConstraints = CA:false
keyUsage = @CLIENT_KEY_USAGE@
crlDistributionPoints = @CDP@
extendedKeyUsage = @CLIENT_EXT_KEY_USAGE@
# email and Microsoft Universal Principal Name - UPN
# Mimics client certs from Class B04 CA.
# Can be specified here but we need to dynamically specify UPN.
# Use flag -addtext to req command instead. See man req. Ex:
# -addext "subjectAltName = DNS:foo.co.uk"
#subjectAltName=email:copy,otherName:1.3.6.1.4.1.311.20.2.3;UTF8:@UPN@


# Produces a clinet cert with useless (for TLS) keyUsage
[ bad_keyusage_client_extensions ]
keyUsage = critical,nonRepudiation
basicConstraints = CA:false

# Special key usage with decipherOnly set
[ decipher_only_keyusage_client_extensions ]
keyUsage = critical,decipherOnly
basicConstraints = CA:false

# Special client cert _without_ UPN
[ no_upn_client_extensions ]
basicConstraints = CA:false
keyUsage = critical,digitalSignature,keyEncipherment,dataEncipherment
crlDistributionPoints = @CDP@
extendedKeyUsage = @CLIENT_EXT_KEY_USAGE@
subjectAltName=email:copy

# Presence of a crl extension section forces a V2 CRL to be created.
# V2 CRLs are also created if -crl_reason is used when revoking a cert.
[ crl_extensions ]
# empty
